# .github/workflows/ai_code_generator_openai_codex_cli.yml
name: 'OpenAI Codex Code Generator'
description: 'A GitHub Action that uses OpenAI Codex to generate code changes and create pull requests based on natural language prompts'

branding:
  icon: 'code'
  color: 'green'

inputs:
  branch_name:
    description: 'The branch to base the changes on'
    required: true
    default: 'main'
  prompt:
    description: 'The prompt/instruction for the AI task'
    required: true
  approval_mode:
    description: 'Approval mode for the codex CLI (suggest, auto-edit, or full-auto)'
    required: true
    default: 'full-auto'
  github_token:
    description: 'GitHub token for creating pull requests'
    required: true
  model:
    description: 'The model to use for the codex CLI'
    required: true
    default: 'o4-mini'
  provider_api_key:
    description: 'API key for the AI provider, OpenAI by default'
    required: true
  provider:
    description: 'The AI provider to use (openai, openrouter, gemini, ollama, mistral, deepseek, xai, groq)'
    required: false
    default: 'openai'
  provider_base_url:
    description: 'Base URL for the AI provider API endpoint. Only needed for providers other than OpenAI.'
    required: false

outputs:
  changes_detected:
    description: 'Whether any changes were detected and committed'
    value: ${{ steps.commit_push.outputs.changes_detected }}
  new_branch:
    description: 'Name of the new branch created (if changes were detected)'
    value: ${{ steps.commit_push.outputs.new_branch }}
  pr_url:
    description: 'URL of the created pull request (if changes were detected)'
    value: ${{ steps.create_pr.outputs.pr_url }}

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch_name }}
        fetch-depth: 0
        token: ${{ inputs.github_token }}

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Install @openai/codex CLI
      shell: bash
      run: yarn global add @openai/codex

    - name: Run @openai/codex CLI
      id: ai_run
      shell: bash
      env:
        CODEX_QUIET_MODE: 1
        CODEX_UNSAFE_ALLOW_NO_SANDBOX: 1
      run: |
        echo "Running @openai/codex CLI..."
        echo "Prompt: ${{ inputs.prompt }}"
        echo "Approval Mode: ${{ inputs.approval_mode }}"
        echo "Provider: ${{ inputs.provider }}"
        echo "-----------------------------------------------------"
        echo "WARNING: Using experimental @openai/codex CLI."
        echo "-----------------------------------------------------"

        # Set up provider-specific environment variables
        provider_upper=$(echo "${{ inputs.provider }}" | tr '[:lower:]' '[:upper:]')
        export "${provider_upper}_API_KEY=${{ inputs.provider_api_key }}"
        
        # Set base URL if provided
        if [ ! -z "${{ inputs.provider_base_url }}" ]; then
          export "${provider_upper}_BASE_URL=${{ inputs.provider_base_url }}"
        fi

        codex -a "${{ inputs.approval_mode }}" -q "${{ inputs.prompt }}" -m "${{ inputs.model }}" --provider "${{ inputs.provider }}"

        if [ $? -ne 0 ]; then
          echo "Error: '@openai/codex' command failed. Check logs above."
          exit 1
        fi

        echo "@openai/codex command finished. The commit step will check for file modifications."

    - name: Commit and Push changes
      id: commit_push
      shell: bash
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

        NEW_BRANCH_NAME="ai-codexcli-${GITHUB_RUN_ID:-$(date +%s)}"
        git checkout -b $NEW_BRANCH_NAME

        if git status --porcelain | grep -qE '^[ MADRCU]|^\?\?'; then
          echo "Changes detected in the workspace. Staging all changes..."
          git add .
          echo "changes_detected=true" >> $GITHUB_OUTPUT
          echo "new_branch=$NEW_BRANCH_NAME" >> $GITHUB_OUTPUT
        else
          echo "No file changes detected after running @openai/codex CLI."
          echo "changes_detected=false" >> $GITHUB_OUTPUT
          exit 0
        fi

        git commit -m "feat: Apply AI changes via @openai/codex CLI" -m "Instruction: ${{ inputs.prompt }}"
        git push origin $NEW_BRANCH_NAME

    - name: Create Pull Request
      id: create_pr
      if: steps.commit_push.outputs.changes_detected == 'true'
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        PR_URL=$(gh pr create \
          --base "${{ inputs.branch_name }}" \
          --head "${{ steps.commit_push.outputs.new_branch }}" \
          --title "AI Proposed Changes (@openai/codex CLI)" \
          --body "This PR was automatically generated by the OpenAI Codex Code Generator action.\n\n**Instruction:** '${{ inputs.prompt }}'\n**Approval Mode:** ${{ inputs.approval_mode }}\n\nPlease review the changes carefully.")
        
        echo "pr_url=$PR_URL" >> $GITHUB_OUTPUT

